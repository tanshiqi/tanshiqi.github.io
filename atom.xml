<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[atan]]></title>
  <subtitle><![CDATA[不务正业的设计师]]></subtitle>
  <link href="http://atan.cn/atom.xml" rel="self"/>
  <link href="http://atan.cn"/>
  <updated>2013-08-22T12:50:03.719Z</updated>
  <id>http://atan.cn/</id>
  <author>
    <name><![CDATA[atan]]></name>
    <email><![CDATA[tanshiqi@gmail.com]]></email>
  </author>
  <generator uri="http://zespia.tw/hexo">Hexo</generator>
  <entry>
    <title type="html"><![CDATA[Gearman安装与简单使用]]></title>
    <link href="http://atan.cn/gearman-installation/"/>
    <id>http://atan.cn/gearman-installation/</id>
    <published>2013-08-19T14:47:00.000Z</published>
    <updated>2013-08-19T09:04:03.000Z</updated>
    <content type="html"><![CDATA[<p>Gearman是开源、轻量级的任务分发程序框架，方便开发分布式的任务处理（计算）程序，Gearman支持多种后端数据的存储，也支持多种语言的客户端。</p>
<h3>编译安装gearman</h3>
<p>首先</p>
<pre><code><figure class="highlight"><pre>wget https://launchpad<span class="preprocessor">.net</span>/gearmand/<span class="number">1.2</span>/<span class="number">1.1</span><span class="number">.9</span>/+download/gearmand-<span class="number">1.1</span><span class="number">.9</span><span class="preprocessor">.tar</span><span class="preprocessor">.gz</span> 
</pre></figure></code></pre>
<p>也可以访问<a href="https://launchpad.net/gearmand/">https://launchpad.net/gearmand/</a>网站,下载最新版本,这里以1.1.9版本为例(目前最新),如果安装其他版本,请根据版本号修改就行了.</p>
<p>然后依次执行</p>
<pre><code><figure class="highlight"><pre>tar -xvzf  gearmand-<span class="number">1.1</span><span class="number">.9</span>.tar.gz 
cd gearmand-<span class="number">1.1</span><span class="number">.9</span> 
./configure (此步骤如果报错,可能有以下几种情况:
            [<span class="number">1</span>:configure: error: no acceptable C compiler found <span class="keyword">in</span> $PATH
             说明没有装gcc或g++编译环境,执行:apt-<span class="keyword">get</span> install build-essential]
            [<span class="number">2</span>:configure: error: cannot find Boost headers version &gt;= <span class="number">1.39</span><span class="number">.0</span>
             这是说没有安装boost包或库,执行:
             apt-<span class="keyword">get</span> install libboost-program-options-dev
             apt-<span class="keyword">get</span> install uuid-dev
             apt-<span class="keyword">get</span> install libevent-dev
             apt-<span class="keyword">get</span> install libdrizzle-dev
             apt-<span class="keyword">get</span> install gperf])
make  (此步骤如果报错:sorry, unimplemented: Graphite loop optimizations can only be used <span class="keyword">if</span> the libcloog-ppl0 <span class="package"><span class="keyword">package</span> <span class="title">is</span> <span class="title">installed</span>
       执行:<span class="title">apt</span>-<span class="title">get</span> <span class="title">install</span> <span class="title">libcloog</span>-<span class="title">ppl0</span>)
<span class="title">make</span> <span class="title">install</span>  
</pre></figure></code></pre>
<p><a name="more"></a> </p>
<h3>安装php的gearman扩展.</h3>
<p>在Debian中安装扩展推荐使用dotdeb的源, 具体使用可以查看<a href="http://www.dotdeb.org/">http://www.dotdeb.org/</a>
然后只需执行</p>
<pre><code><figure class="highlight"><pre>apt-<span class="keyword">get</span> install php5-gearman
</pre></figure></code></pre>
<p>即可.
如果是其他发行版则需要编译安装, 执行以下：</p>
<pre><code><figure class="highlight"><pre>wget http://pecl.php.net/get/gearman-<span class="number">1.1</span>.<span class="number">1</span>.tgz
tar zxf gearman-<span class="number">1.1</span>.<span class="number">1</span>.tgz 
cd cd gearman-<span class="number">1.1</span>.<span class="number">1</span> 
<span class="function"><span class="title">phpize</span>  <span class="params">(此步骤如果报错:phpize: command not found
         执行:apt-get install php5-dev)</span>
./<span class="title">configure</span>
<span class="title">make</span>
<span class="title">make</span> <span class="title">install</span>  <span class="params">(注意:如果php是默认安装的话可以省略,如果不是的话,在这步执行后会看到:
                <span class="variable">Installing</span> shared extensions:     /usr/lib/php5/<span class="number">20090626</span>+lfs/
                这一行文字代表是php扩展so文件存放的位置,需要自行拷贝到相应<span class="variable">PHP</span>的扩展目录里)</span>
<span class="title">vim</span> /<span class="title">etc</span>/<span class="title">php5</span>/<span class="title">apache2</span>/<span class="title">php</span>.<span class="title">ini</span> <span class="params">(将 extension = gearman.so 放入php.ini最后一行即可)</span>
/<span class="title">etc</span>/<span class="title">init</span>.<span class="title">d</span>/<span class="title">apache2</span> <span class="title">restart</span>
</pre></figure></code></pre>
<h3>测试php调用gearman</h3>
<p>首先创建gearman日志文件</p>
<pre><code><figure class="highlight"><pre><span class="keyword">mkdir</span> -p /usr/<span class="keyword">local</span>/var/<span class="keyword">log</span>/
cd /usr/<span class="keyword">local</span>/var/<span class="keyword">log</span>/
touch gearmand.<span class="keyword">log</span>
gearmand -d (启动gearman)
ps -ef | <span class="keyword">grep</span> gearmand  (查看gearmand是否启动)
</pre></figure></code></pre>
<p>创建 client.php:</p>
<pre><code><figure class="highlight"><pre><span class="preprocessor">&lt;?php</span>
  <span class="variable">$client</span>= <span class="keyword">new</span> GearmanClient();
  <span class="variable">$client</span>-&gt;addServer(<span class="string">"127.0.0.1"</span>, <span class="number">4730</span>);
  <span class="keyword">print</span> <span class="variable">$client</span>-&gt;<span class="keyword">do</span>(<span class="string">"title"</span>, <span class="string">"Linvo"</span>);
  <span class="keyword">print</span> <span class="string">"/n"</span>;
<span class="preprocessor">?&gt;</span> 
</pre></figure></code></pre>
<p>创建 worker.php:</p>
<pre><code><figure class="highlight"><pre><span class="preprocessor">&lt;?php</span> 
  <span class="variable">$worker</span>= <span class="keyword">new</span> GearmanWorker(); 
  <span class="variable">$worker</span>-&gt;addServer(<span class="string">"127.0.0.1"</span>, <span class="number">4730</span>);  
  <span class="variable">$worker</span>-&gt;addFunction(<span class="string">"title"</span>, <span class="string">"title_function"</span>); 
  <span class="keyword">while</span> (<span class="variable">$worker</span>-&gt;work()); 

  <span class="function"><span class="keyword">function</span> <span class="title">title_function</span><span class="params">(<span class="variable">$job</span>)</span> 
  {</span> 
    <span class="variable">$str</span> = <span class="variable">$job</span>-&gt;workload(); 
    <span class="keyword">return</span> strlen(<span class="variable">$str</span>); 
  } 
<span class="preprocessor">?&gt;</span>   
</pre></figure></code></pre>
<p>然后分别执行</p>
<pre><code><figure class="highlight"><pre>php -c /etc/php5/apache2/php<span class="variable">.ini</span> worker<span class="variable">.php</span>  (开启worker<span class="variable">.php</span>,另外开启一个ssh连接)
php -c /etc/php5/apache2/php<span class="variable">.ini</span> client<span class="variable">.php</span>  (如果看到命令行有 <span class="number">5</span>/n 说明测试成功)  
</pre></figure></code></pre>
<h3>完成以上步骤,说明gearman已经安装成功,并且php扩展也成功了,接下来是gearman的队列持久化测试</h3>
<p>在mysql中创建一个数据库 </p>
<pre><code><figure class="highlight"><pre><span class="title">create</span> <span class="typedef">database gearman</span>
</pre></figure></code></pre>
<p>然后创建表</p>
<pre><code><figure class="highlight"><pre><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`gearman_queue`</span> (
<span class="string">`unique_key`</span> <span class="keyword">varchar</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,
<span class="string">`function_name`</span> <span class="keyword">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,
<span class="string">`priority`</span> <span class="keyword">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,
<span class="string">`data`</span> LONGBLOB <span class="keyword">NOT</span> <span class="keyword">NULL</span>,
<span class="string">`when_to_run`</span> <span class="keyword">INT</span>, <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span>  (<span class="string">`unique_key`</span>)
)  
</pre></figure></code></pre>
<p>然后以持久化方式启动gearman</p>
<pre><code><figure class="highlight"><pre><span class="comment">gearmand</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">queue</span>-<span class="comment">type=MySQL</span>  <span class="literal">-</span><span class="literal">-</span><span class="comment">mysql</span>-<span class="comment">host=127</span>.<span class="comment">0</span>.<span class="comment">0</span>.<span class="comment">1</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">mysql</span>-<span class="comment">user=root</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">mysql</span>-<span class="comment">password=atanstudio</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">mysql</span>-<span class="comment">db=gearman</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">mysql</span>-<span class="comment">table=gearman_queue</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">mysql</span>-<span class="comment">port=3306</span>  <span class="comment">(如果数据库没有插入数据</span>,<span class="comment">请重启服务器</span>,<span class="comment">本人就是重启后才有反应)</span>  
</pre></figure></code></pre>
<p>--queue-type=连接类型  --mysql-host=服务器地址  --mysql-user=登录用户名  --mysql-password=登录密码   --mysql-db=数据库  --mysql-table=表  --mysql-port=数据库端口号</p>
<p>启动之后再次执行worker与client</p>
<pre><code><figure class="highlight"><pre>php -c /etc/php5/apache2/php<span class="variable">.ini</span> worker<span class="variable">.php</span>
php -c /etc/php5/apache2/php<span class="variable">.ini</span> client<span class="variable">.php</span>  
</pre></figure></code></pre>
<p>然后观察数据库,应该会有对应的记录了,如果不明显可以在work.php的function里面添加 sleep(3); 表示每3秒执行一次,再观察数据库就能看到效果了</p>
]]></content>
    <category scheme="http://atan.cn/tags/gearman/" term="gearman"/>
    <category scheme="http://atan.cn/tags/php/" term="php"/>
    <category scheme="http://atan.cn/tags/mysql/" term="mysql"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Google Visual Assets Guidelines]]></title>
    <link href="http://atan.cn/google-visual-assets-guidelines/"/>
    <id>http://atan.cn/google-visual-assets-guidelines/</id>
    <published>2013-07-15T21:52:00.000Z</published>
    <updated>2013-08-18T15:10:27.000Z</updated>
    <content type="html"><![CDATA[<p><img src="https://dl.dropboxusercontent.com/u/7061992/blog_images/Google_Visual_Assets_Guidelines.jpg" alt="Google Visual Assets Guidelines"><br>Google的扁平化设计，和IOS7有着完全不同的感觉：<br><a href="http://www.behance.net/gallery/Google-Visual-Assets-Guidelines-Part-1/9028077">Part 1: Product icons and logo lockups</a><br><a href="http://www.behance.net/gallery/Google-Visual-Assets-Guidelines-Part-2/9084309">Part 2: User interface icons and Illustrations</a></p>
]]></content>
    <category scheme="http://atan.cn/tags/flat/" term="flat"/>
    <category scheme="http://atan.cn/tags/google/" term="google"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[又拍云的增量同步]]></title>
    <link href="http://atan.cn/upyun-sync/"/>
    <id>http://atan.cn/upyun-sync/</id>
    <published>2013-07-15T15:44:00.000Z</published>
    <updated>2013-08-18T15:10:22.000Z</updated>
    <content type="html"><![CDATA[<p>最近在项目中使用了又拍云作为图片存储，访问速度大大加快了，确实是值得表扬的国内云存储服务。 但是实际使用中还有有小遗憾，比如图片的同步，又拍云只提供了API和FTP两种方式，而缺少了服务器间的rsync，所以感觉总是不是很方便，但是方法还是有的，lftp就是比较简单的方式，新建一个shell，内容如下：</p>
<pre><code><figure class="highlight"><pre><span class="shebang">#!/bin/bash</span>
HOST=<span class="string">"v0.ftp.upyun.com"</span>
USER=<span class="string">"upyun_username"</span> <span class="comment">//FTP用户名</span>
PASS=<span class="string">"upyun_password"</span> <span class="comment">//密码</span>
LCD=<span class="string">"localpath"</span> <span class="comment">//远程目录</span>
RCD=<span class="string">"remotepath"</span> <span class="comment">//本地目录</span>
lftp -c <span class="string">"open ftp://$HOST;
user $USER $PASS;
lcd $LCD;
cd $RCD;
mirror -e -v"</span>
</pre></figure></code></pre>
<p>然后设置一个CRON，定时执行，就可以实现本地和远程的增量同步了，缺陷也是有的，CRON再怎么说也不能做到实时，对时效性比较高的还是不要采用此方案了。</p>
]]></content>
    <category scheme="http://atan.cn/tags/lftp/" term="lftp"/>
    <category scheme="http://atan.cn/tags/sync/" term="sync"/>
    <category scheme="http://atan.cn/tags/upyun/" term="upyun"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[BASH下批量替换line endings]]></title>
    <link href="http://atan.cn/bash-line-endings/"/>
    <id>http://atan.cn/bash-line-endings/</id>
    <published>2013-05-17T14:16:00.000Z</published>
    <updated>2013-08-18T15:10:17.000Z</updated>
    <content type="html"><![CDATA[<p>从windows上拷贝过来的原文件和linux上的line endings不同，导致git提交的时候产生一推修改，其实bash下只要简单的转换一下line endings就立即让git清爽了很多<br>首先安装dos2unix:</p>
<pre><code><figure class="highlight"><pre>su<span class="operator"><span class="keyword">do</span> apt-<span class="keyword">get</span> install dos2unix
</pre></figure></code></pre>
<p>然后就可以执行：</p>
<pre><code><figure class="highlight"><pre><span class="comment">find</span> <span class="string">.</span> <span class="literal">-</span><span class="comment">name</span> <span class="comment">"*"</span> <span class="literal">-</span><span class="comment">type</span> <span class="comment">f</span> <span class="literal">-</span><span class="comment">exec</span> <span class="comment">dos2unix</span> <span class="comment">{}</span> <span class="comment">\;
</pre></figure></code></pre>
]]></content>
    <category scheme="http://atan.cn/tags/line-endings/" term="line-endings"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[vagrant 使用笔记]]></title>
    <link href="http://atan.cn/vagrant/"/>
    <id>http://atan.cn/vagrant/</id>
    <published>2013-04-27T20:46:00.000Z</published>
    <updated>2013-08-19T09:06:38.000Z</updated>
    <content type="html"><![CDATA[<p>最近试用了一下vagrant，确实得佩服一下ruby社区的创造力，vagrant对于搭建开发环境简单到像过家家一样，本地开发于虚拟机结合的巧妙而又顺畅。以下只是我个人的一些总结纪录。<br>官方网站：<a href="http://www.vagrantup.com/">http://www.vagrantup.com/</a><br>镜像box：<a href="http://www.vagrantbox.es/">http://www.vagrantbox.es/</a> 国内访问不是很快 安装好后就可以：</p>
<pre><code><figure class="highlight"><pre>$ vagrant init precise32 http:<span class="comment">//files.vagrantup.com/precise32.box</span>
$ vagrant up

vagrant ssh <span class="comment">//连接虚拟机的ssh  </span>
vagrant up <span class="comment">//开机  </span>
vagrant halt <span class="comment">//关机  </span>
vagrant reload <span class="comment">//重启</span>
</pre></figure></code></pre>
<p><a name="more"></a>
vagrantfile配置文件，比较重要的就是forwarded_port</p>
<pre><code><figure class="highlight"><pre>config.vm.network :forwarded_port, <span class="method">guest:</span> <span class="number">6379</span>, <span class="method">host:</span> <span class="number">6379</span>
config.vm.network :forwarded_port, <span class="method">guest:</span> <span class="number">3306</span>, <span class="method">host:</span> <span class="number">3306</span>
</pre></figure></code></pre>
<p>这样配置后，就可以使用127.0.0.1:3306连接mysql，6379连接redis了，如同本地环境一样<br>另外就是共享目录：</p>
<pre><code><figure class="highlight"><pre>config<span class="variable">.vm</span><span class="variable">.synced_folder</span> <span class="string">"~/Dropbox/www"</span>, <span class="string">"/www"</span>
</pre></figure></code></pre>
<p>这样就能直接在/www进行开发了。</p>
]]></content>
    <category scheme="http://atan.cn/tags/vagrant/" term="vagrant"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[原来Federated引擎可以关联视图]]></title>
    <link href="http://atan.cn/federated-view/"/>
    <id>http://atan.cn/federated-view/</id>
    <published>2013-04-17T20:29:00.000Z</published>
    <updated>2013-08-18T15:10:05.000Z</updated>
    <content type="html"><![CDATA[<p>刚才尝试了一下确实可以，这下方便好多了，如下：</p>
<pre><code><figure class="highlight"><pre><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test_table`</span> (
  <span class="string">`id`</span> <span class="keyword">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,
  <span class="keyword">PRIMARY</span> <span class="keyword">KEY</span> (<span class="string">`id`</span>)
) ENGINE=InnoDB <span class="keyword">DEFAULT</span> CHARSET=utf8;</span>

<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> <span class="string">`test_view`</span> <span class="keyword">AS</span>
<span class="keyword">select</span> * <span class="keyword">from</span> test_table;</span>

<span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`test_federated`</span> (
  <span class="string">`id`</span> <span class="keyword">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>
) ENGINE=FEDERATED <span class="keyword">DEFAULT</span> CHARSET=utf8 <span class="keyword">CONNECTION</span>=<span class="string">'mysql://user:password@127.0.0.1:3306/test/test_view'</span>;</span>
</pre></figure></code></pre>
]]></content>
    <category scheme="http://atan.cn/tags/federated/" term="federated"/>
    <category scheme="http://atan.cn/tags/mysql/" term="mysql"/>
    <category scheme="http://atan.cn/tags/view/" term="view"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[flickr_upload命令行批量上传照片至Flickr]]></title>
    <link href="http://atan.cn/flickr-upload/"/>
    <id>http://atan.cn/flickr-upload/</id>
    <published>2013-03-12T10:23:00.000Z</published>
    <updated>2013-08-19T09:05:41.000Z</updated>
    <content type="html"><![CDATA[<p>自从买了 <a href="http://www.wdc.com/cn/products/products.aspx?id=280" target="_blank">WD MyBook Live</a> 后，宝宝的照片终于有了去处，估算了一下，按照目前照片数量的增长幅度，这个东东里的照片可以保存到宝宝40岁~</p>
<p>其实照片放在本地我也是不放心的，于是乎购买了 <a href="http://www.flickr.com/" target="_blank">Flickr</a> 的 pro 帐号（无限上传，单张50M，这辈子应该够了）用来做网络备份。</p>
<p>Flickr本身提供HTML5版本的在线上传界面，单次最高上传200张，如果照片不多还是很好用的，但是我基本上一个月的照片在1000张左右，每次等待上传的时间太漫长了，那么需要解决的就是能有个脚本能将我上传到 MBL 里的照片自动传到 Flickr 上，并且不限制数量。MBL的系统debian的，于是找到了这个工具：<a href="http://search.cpan.org/~cpb/Flickr-Upload/" target="_blank">flickr_upload</a>。</p>
<p><a name="more"></a>
1.  安装比较简单，SSH连上MBL后直接：<code>sudo apt-get install libflickr-upload-perl</code></p>
<ol>
<li><p>安装好后先运行 <code>flickr_upload -auth</code></p>
<pre><code><figure class="highlight"><pre><span class="number">1.</span> Enter <span class="keyword">the</span> following URL <span class="keyword">into</span> your browser

http://www.flickr.com/services/auth/?api_sig=XXXXX ....

<span class="number">2.</span> Follow <span class="keyword">the</span> instructions <span class="function_start"><span class="keyword">on</span> <span class="title">the</span></span> web page
<span class="number">3.</span> Hit &lt;Enter&gt; when finished.
</pre></figure></code></pre>
</li>
</ol>
<ol>
<li><p>将上面的这段网址复制到浏览器中运行，点击“接受授权”;</p>
<p>回到命令行后按回车，会返回一串auth_token，复制此token;</p>
</li>
<li><p>新建一个文件：~/.flickrrc, 内容:</p>
<pre><code><figure class="highlight"><pre><span class="setting">auth_token=<span class="value">XXXXXXXXXX //获得的auth_token</span></span>
<span class="setting">is_public=<span class="value"><span class="number">0</span></span></span>
<span class="setting">is_friend=<span class="value"><span class="number">0</span></span></span>
<span class="setting">is_family=<span class="value"><span class="number">1</span></span></span>
</pre></figure></code></pre>
</li>
</ol>
<ol>
<li><p>然后就可以使用 <code>flickr_upload abc.jpg</code> 上传图片了。 如果要上传当前目录下的全部图片，则可以这样：</p>
<pre><code><figure class="highlight"><pre>ls -1 | tr "\\n" " " | xargs flickr_up<span class="operator"><span class="keyword">load</span>
</pre></figure></code></pre>
</li>
</ol>
]]></content>
    <category scheme="http://atan.cn/tags/flickr/" term="flickr"/>
    <category scheme="http://atan.cn/tags/upload/" term="upload"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Chrome desktop notification]]></title>
    <link href="http://atan.cn/chrome-desktop-notification/"/>
    <id>http://atan.cn/chrome-desktop-notification/</id>
    <published>2013-03-06T22:26:00.000Z</published>
    <updated>2013-08-19T04:16:38.000Z</updated>
    <content type="html"><![CDATA[<p>Chrome 桌面消息通知推送示例:</p>
<pre><code><figure class="highlight"><pre><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
<span class="function"><span class="keyword">function</span> <span class="title">notify</span><span class="params">()</span> {</span>
    <span class="keyword">var</span> havePermission = window.webkitNotifications.checkPermission();
    <span class="keyword">if</span> (havePermission == <span class="number">0</span>) { <span class="comment">// 0 is PERMISSION_ALLOWED</span>
        <span class="keyword">var</span> notification = window.webkitNotifications.createNotification(
            <span class="string">'http://i.stack.imgur.com/dmHl0.png'</span>,
            <span class="string">'Chrome notification!'</span>,
            <span class="string">'Here is the notification text'</span>
            );

        notification.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> {</span>
            window.open(<span class="string">"http://www.google.com"</span>);
            notification.close();
        }
        notification.show();
    } <span class="keyword">else</span> {
        window.webkitNotifications.requestPermission();
    }
} 
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>    
<span class="tag">&lt;<span class="title">button</span> <span class="attribute">onclick</span>=<span class="value">"notify()"</span>&gt;</span>Cick here to notify<span class="tag">&lt;/<span class="title">button</span>&gt;</span>
</pre></figure></code></pre>
<p>扩展阅读：<a href="http://www.html5rocks.com/en/tutorials/notifications/quick/">Using the Notifications API</a></p>
]]></content>
    <category scheme="http://atan.cn/tags/chrome/" term="chrome"/>
    <category scheme="http://atan.cn/tags/html5/" term="html5"/>
    <category scheme="http://atan.cn/tags/javascript/" term="javascript"/>
    <category scheme="http://atan.cn/tags/notify/" term="notify"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Webdis 学习笔记（二）Websocket]]></title>
    <link href="http://atan.cn/webdis-websocket/"/>
    <id>http://atan.cn/webdis-websocket/</id>
    <published>2013-01-22T00:46:00.000Z</published>
    <updated>2013-08-19T09:06:58.000Z</updated>
    <content type="html"><![CDATA[<p>在<a href="./post/webdis-install">上一篇</a>中提到webdis内带了一个websocket接口，下面就用来测试一下redis的PUB/SUB功能，实现“消息推送”。</p>
<p>新建一个websocket.html，内容如下：</p>
<pre><code><figure class="highlight"><pre><span class="doctype">&lt;!doctype html&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
<span class="tag">&lt;<span class="title">head</span>&gt;</span><span class="tag">&lt;/<span class="title">head</span>&gt;</span>
<span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript">
        <span class="keyword">var</span> jsonSocket = <span class="keyword">new</span> WebSocket(<span class="string">"ws://127.0.0.1:7379/"</span>);
        jsonSocket.onopen = <span class="keyword">function</span>() {
            console.log(<span class="string">"JSON socket connected!"</span>);
            jsonSocket.send(JSON.stringify([<span class="string">"SUBSCRIBE"</span>, <span class="string">"test"</span>]));
        };
        jsonSocket.onmessage = <span class="keyword">function</span>(messageEvent) {
            console.log(messageEvent.data);
        };
        jsonSocket.onclose = <span class="keyword">function</span>() {
            console.log(<span class="string">"JSON closed"</span>);
        };
    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</pre></figure></code></pre>
<p><a name="more"></a>
用Chrome打开并调出控制台，可以看到：</p>
<pre><code><figure class="highlight"><pre>JSON socket connected! <span class="transposed_variable">websocket.</span>html:<span class="number">8</span>
<span class="cell">{"SUBSCRIBE":["subscribe","test",<span class="number">1</span>]}</span> 
</pre></figure></code></pre>
<p>开启一个redis-cli，输入：<code>PUBLISH test &quot;this is new content&quot;</code>，回车;</p>
<p>Chrome控制台将立即输出 <code>{&quot;SUBSCRIBE&quot;:[&quot;message&quot;,&quot;test&quot;,&quot;this is new content&quot;]}</code></p>
<p>PUSH Message 就是这么简单～</p>
]]></content>
    <category scheme="http://atan.cn/tags/redis/" term="redis"/>
    <category scheme="http://atan.cn/tags/webdis/" term="webdis"/>
    <category scheme="http://atan.cn/tags/websocket/" term="websocket"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Webdis 学习笔记（一）安装]]></title>
    <link href="http://atan.cn/webdis-install/"/>
    <id>http://atan.cn/webdis-install/</id>
    <published>2013-01-22T00:10:00.000Z</published>
    <updated>2013-08-19T09:07:53.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://webd.is/">webdis</a> 是一个简单的 Web 服务器，提供了 HTTP 接口来访问 Redis 服务器。</p>
<ol>
<li><p>安装方法比较简单，官方网站上有写：</p>
<pre><code><figure class="highlight"><pre><span class="title">git</span> clone git://github.com/nicolasff/webdis.git
<span class="title">cd</span> webdis
<span class="title">make</span>
</pre></figure></code></pre>
</li>
</ol>
<p><a name="more"></a>
2.  编译好后先不急着执行，修改编译目录下的 webdis.json，修改</p>
<pre><code><figure class="highlight"><pre>    <span class="string">"daemonize"</span>:    <span class="keyword">true</span>,
    <span class="string">"websockets"</span>:   <span class="keyword">true</span>,


第一行是将webdis以守护进程方式运行，第二行是开启websockets支持。 运行：./webdis 之后就可以用HTTP接口操作redis，默认端口<span class="number">7379</span>，测试：

浏览器直接访问 http:<span class="comment">//127.0.0.1:7379/SET/key/value</span>

或者shell： `$ curl <span class="string">"http://127.0.0.1:7379/SET/key/value"</span>`

再或者PHP:

    <span class="preprocessor">&lt;?php</span>
    <span class="variable">$url</span> = <span class="string">"http://127.0.0.1:7379/SET/key/value"</span>;
    <span class="keyword">echo</span> file_get_contents(<span class="variable">$url</span>);


返回结果： `{<span class="string">"SET"</span>:[<span class="keyword">true</span>,<span class="string">"OK"</span>]}`
</pre></figure></code></pre>
<ol>
<li><p>顺便说一下，当前官方版本的websockets接口有个bug，<a href="https://github.com/nicolasff/webdis/issues/58">当开启成功后就马上关闭了</a>，导致无法接收之后的请求，幸好已经有人<a href="https://github.com/dcosta72/webdis/commit/884cba24e02ae905404321fad50a9d6898383f94">修复了这个问题</a>，但还未合并至官方master。 如果想正常使用websockets，暂时可以使用这个git：<a href="https://github.com/dcosta72/webdis">https://github.com/dcosta72/webdis</a> 或者手工修改websocket.c后再编译：<br>修改:</p>
<pre><code><figure class="highlight"><pre>/* <span class="keyword">send</span> WS frame <span class="variable">*/</span>
r = http_response_init(cmd-&gt;w, <span class="number">0</span>, NULL);
<span class="keyword">if</span> (r == NULL)
    <span class="keyword">return</span> -<span class="number">1</span>;
</pre></figure></code></pre>
</li>
</ol>
<pre><code><figure class="highlight"><pre>为：

    /* <span class="keyword">send</span> WS frame <span class="variable">*/</span>
    r = http_response_init(cmd-&gt;w, <span class="number">0</span>, NULL);
    <span class="keyword">if</span> (cmd_is_subscribe(cmd)) {
        r-&gt;keep_alive = <span class="number">1</span>;
    }

    <span class="keyword">if</span> (r == NULL)
        <span class="keyword">return</span> -<span class="number">1</span>;
</pre></figure></code></pre>
]]></content>
    <category scheme="http://atan.cn/tags/redis/" term="redis"/>
    <category scheme="http://atan.cn/tags/webdis/" term="webdis"/>
    <category scheme="http://atan.cn/tags/websocket/" term="websocket"/>
  </entry>
  <entry>
    <title type="html"><![CDATA[Shell中计算字符串的md5]]></title>
    <link href="http://atan.cn/shell-md5/"/>
    <id>http://atan.cn/shell-md5/</id>
    <published>2013-01-21T23:52:00.000Z</published>
    <updated>2013-08-18T15:09:30.000Z</updated>
    <content type="html"><![CDATA[<p>经常需要用到计算某个字符串的MD5值，于是要不找个工具，要不使用在线的，其实shell中有几个很简单的方法</p>
<ol>
<li><p><code>echo -n 123|md5sum</code></p>
<p>返回202cb962ac59075b964b07152d234b70 其中-n的作用是去掉结尾的换行符，当然也可以用printf代替</p>
</li>
<li><p><code>php -r &quot;echo md5(&#39;123&#39;);&quot;</code></p>
<p>返回202cb962ac59075b964b07152d234b70</p>
</li>
<li><p>MYSQL方式</p>
<pre><code><figure class="highlight"><pre><span class="comment">mysql</span>&gt; <span class="comment">select</span> <span class="comment">md5('123');</span>
<span class="literal">+</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">+</span>
<span class="comment">|</span> <span class="comment">md5('123')</span>                       <span class="comment">|</span>
<span class="literal">+</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">+</span>
<span class="comment">|</span> <span class="comment">202cb962ac59075b964b07152d234b70</span> <span class="comment">|</span>
<span class="literal">+</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">-</span><span class="literal">+</span>
<span class="comment">1</span> <span class="comment">row</span> <span class="comment">in</span> <span class="comment">set</span> <span class="comment">(0</span>.<span class="comment">00</span> <span class="comment">sec)
</pre></figure></code></pre>
</li>
</ol>
]]></content>
    <category scheme="http://atan.cn/tags/shell/" term="shell"/>
  </entry>
</feed>
